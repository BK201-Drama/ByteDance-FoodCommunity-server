import { PlatformEnum, AccessTokenEnum, SessionTypeEnum } from 'src/constant';
import Common from 'src/utils/Common';
export interface IResponse<T = any> {
    data: T;
    message: string;
    code: number;
}
export interface IGetAccessTokenOptions {
    platform: PlatformEnum;
    type?: AccessTokenEnum;
}
export interface IGetAccessToken {
    accessToken: string;
    expiresIn: number;
    expiresAt: number;
    raw: string;
    message?: string;
}
export declare function getAccessToken(instance: Common, options: IGetAccessTokenOptions): Promise<IGetAccessToken>;
export interface IGetSessionKeyOptions {
    platform: PlatformEnum;
    type?: SessionTypeEnum;
    context: any;
}
export interface IGetSessionKey {
    sessionKey: string;
    expiresIn: number;
    expiresAt: number;
    raw: string;
    message?: string;
}
export declare function getSessionKey(instance: Common, options: IGetSessionKeyOptions): Promise<IGetSessionKey>;
