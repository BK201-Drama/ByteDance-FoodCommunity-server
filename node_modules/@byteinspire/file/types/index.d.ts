import { AxiosInstance } from 'axios';
import { ObjectId } from 'bson';

declare const FileSdk: SDK.ISDK;

export default FileSdk;
export type API = SDK.IFileSDK;

declare namespace SDK {
    interface ISDK {
        createFileSDK(serviceId: string, axiosInstance: AxiosInstance): IFileSDK;
    }
    interface IFileSDK {
        upload(
            name: string,
            buffer: Buffer | string | IFileObject,
            opt?: IOption,
            addition?: Record<any, any>,
        ): Promise<{ url: string; id: ObjectId }>;
        delete(file: string | Array<string>): Promise<{
            success: boolean;
            code: Number;
            data: {
                deletedFiles: Array<{ id: string; url: string }>;
                failed: Array<{ id: string; url: string }>;
                notExists: Array<{ id: string; url: string }>;
            };
        }>;
        download(
            file: string | ObjectId,
            params?: {
                fileName?: string;
                directory?: string;
                onProgress?: (percentage: string, chunk: string, remainingSize: string) => {};
            },
        ): Promise<{ filePath: string }>;
    }
    interface IFileObject {
        url: string;
    }
    interface IOption {
        region?: 'cn' | 'sg';
        type?: string;
    }
}
