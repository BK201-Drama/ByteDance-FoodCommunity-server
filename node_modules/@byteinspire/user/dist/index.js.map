{"version":3,"sources":["webpack://@byteinspire/user/webpack/bootstrap","webpack://@byteinspire/user/webpack/runtime/define property getters","webpack://@byteinspire/user/webpack/runtime/hasOwnProperty shorthand","webpack://@byteinspire/user/webpack/runtime/make namespace object","webpack://@byteinspire/user/./src/utils/isObject.ts","webpack://@byteinspire/user/./src/consts.ts","webpack://@byteinspire/user/./src/utils/isContext.ts","webpack://@byteinspire/user/./src/utils/isUser.ts","webpack://@byteinspire/user/./src/utils/catchError.ts","webpack://@byteinspire/user/./src/functions/_.ts","webpack://@byteinspire/user/./src/functions/current.ts","webpack://@byteinspire/user/./src/functions/logout.ts","webpack://@byteinspire/user/./src/utils/validator.ts","webpack://@byteinspire/user/./src/functions/login.ts","webpack://@byteinspire/user/./src/functions/loginByPhone.ts","webpack://@byteinspire/user/./src/functions/register.ts","webpack://@byteinspire/user/./src/functions/updateOne.ts","webpack://@byteinspire/user/./src/functions/sendSMS.ts","webpack://@byteinspire/user/./src/functions/changePassword.ts","webpack://@byteinspire/user/./src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const isObject = (value: any) => {\n  const type = typeof value;\n  return value != null && (type === 'object' || type === 'function');\n};\n\nexport default isObject;\n","export const PROVIDER_LIST = ['`phone_code`', '`email`', '`username`'];\nexport const USER_SESSION_KEY_V2 = 'x-tt-session-v2';\nexport const USER_SESSION_KEY_V3 = 'x-larkcloud-user-v1';\n","import { USER_SESSION_KEY_V2 } from 'consts';\nimport { IContext } from 'functions/_';\n\nfunction isContext(context: any): context is IContext {\n  return context && context.headers && context.headers[USER_SESSION_KEY_V2];\n}\n\nisContext.ContextError = new Error('context missing params');\n\nexport default isContext;\n","export declare class ObjectId {\n  constructor(id?: string | number | ObjectId);\n  generationTime: number;\n  static cacheHexString?: boolean;\n  static createFromHexString(hexString: string): ObjectId;\n  static createFromTime(time: number): ObjectId;\n  static isValid(id: string | number | ObjectId): boolean;\n  equals(otherID: ObjectId | string): boolean;\n  static generate(time?: number): Buffer;\n  getTimestamp(): Date;\n  toHexString(): string;\n}\n\nexport interface IUser {\n  _id: string | ObjectId;\n}\n\nfunction isUser(user: any): user is IUser {\n  return (\n    user &&\n    user._id &&\n    (typeof user._id === 'string' || typeof user.toHexString === 'function')\n  );\n}\n\nexport default isUser;\n","export function catchError(err: any) {\n  if (err.response?.data?.message) {\n    throw new Error(err.response.data.message);\n  }\n}\n\nexport default catchError;\n","import { AxiosRequestConfig } from 'axios';\n\nexport type IRequest = <T = any>(\n  identifier: string,\n  config: AxiosRequestConfig\n) => Promise<T>;\n\nexport interface IContext {\n  headers: Record<string, string>;\n  request?: IContext;\n}\n\nexport interface MethodOptions {\n  serviceId: string;\n  request: IRequest;\n  ctx: IContext;\n  headers: Record<string, string>;\n}\n\nexport type Method<F> = (opts: MethodOptions) => F;\n\nexport function createMethod<F>(fn: Method<F>) {\n  return fn;\n}\n","import { createMethod } from './_';\n\nexport type nullable = string | null;\n\nexport interface CurrentResponse {\n  _id: string;\n  username: string;\n  nickname?: string; // 昵称\n  openid?: string; // OAuth openid\n  anonymousOpenid?: string; // OAuth 匿名 openid\n  unionid?: string; // OAuth 唯一id\n  platform?: string; // 注册平台\n  avatar: nullable; // 头像\n  passhash?: nullable; // 密文\n  secret?: nullable; // secret\n  email: nullable; // 邮箱\n  phoneNumber: nullable; // 手机号\n  intro: nullable; // 简介\n  lastIp: nullable; // 最后一次登录IP\n  lastLogin: number | null; // 最后一次登录时间\n  loginCount: number; // 登录次数\n  agent: nullable; // 请求代理\n  status: boolean; // 封禁状态\n  firstProvider: string; // 首次注册方式\n  createAt: number;\n  createdAt: number;\n  updatedAt: number;\n  [k: string]: any;\n}\n\nconst current = createMethod((opts) => {\n  return async () => {\n    try {\n      return await opts.request<CurrentResponse>('current', {\n        url: `/api/v1/services/${opts.serviceId}/users/current`,\n        method: 'GET',\n        headers: opts.headers,\n      });\n    } catch (err) {\n      return undefined;\n    }\n  };\n});\n\nexport default current;\n","import { createMethod } from './_';\n\nexport interface LogoutResponse {\n  success: boolean;\n}\n\nconst logout = createMethod((opts) => {\n  return async () => {\n    await opts.request<LogoutResponse>('logout', {\n      url: `/api/v1/services/${opts.serviceId}/users/logout`,\n      headers: opts.headers,\n      method: 'POST',\n    });\n\n    return { success: true };\n  };\n});\n\nexport default logout;\n","import { PROVIDER_LIST } from 'consts';\n\nconst validatePhone = (account: string): boolean => true;\n\nconst validateEmail = (account: string): boolean =>\n  /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(account);\n\nconst validateProvider = (provider: string): void => {\n  if (!PROVIDER_LIST.includes(`\\`${provider}\\``)) {\n    const errMsg =\n      `未支持的 provider: \\`${provider}\\`. ` +\n      `目前仅支持: ${PROVIDER_LIST.join(',')}.`;\n    throw new Error(errMsg);\n  }\n};\n\nexport const validateAccount = function (\n  account: string,\n  provider: string\n): void {\n  let isValid = false;\n\n  validateProvider(provider);\n\n  switch (provider) {\n    case 'phone_code':\n      isValid = validatePhone(account);\n      break;\n    case 'email':\n      isValid = validateEmail(account);\n      break;\n    case 'username':\n      isValid = true;\n      break;\n    default:\n      throw new Error(`不支持的注册方式: \\`${provider}\\`. 请检查!`);\n  }\n\n  if (!isValid) {\n    throw new Error(`输入的账号不合法: \\`${account}\\`. 请检查!`);\n  }\n};\n","import { createMethod } from './_';\nimport { validateAccount } from 'utils/validator';\nimport { CurrentResponse } from './current';\n\nconst login = createMethod((opts) => {\n  return async (account: string, password: string) => {\n    if (!password) {\n      throw new Error('密码参数缺失');\n    }\n\n    const provider = 'username';\n\n    validateAccount(account, provider);\n\n    const { userInfo } = await opts.request<CurrentResponse>('login', {\n      url: `/api/v1/services/${opts.serviceId}/users/login`,\n      method: 'post',\n      headers: opts.headers,\n      data: { provider, account, password },\n    });\n    return userInfo;\n  };\n});\n\nexport default login;\n","import { createMethod } from './_';\nimport { CurrentResponse } from './current';\n\nconst loginByPhone = createMethod((opts) => {\n  return async (account: string, code: string) => {\n    const { userInfo } = await opts.request<CurrentResponse>('loginByPhone', {\n      url: `/api/v1/services/${opts.serviceId}/users/loginByPhone`,\n      method: 'post',\n      headers: opts.headers,\n      data: { account, code },\n    });\n\n    return userInfo;\n  };\n});\n\nexport default loginByPhone;\n","import { createMethod } from './_';\nimport { CurrentResponse } from './current';\n\nexport interface RegisterResponse {\n  isLogin: boolean;\n  sessionKey: string;\n  userInfo: CurrentResponse;\n}\n\nconst register = createMethod((opts) => {\n  return async (account: string, password: string) => {\n    if (!password) {\n      throw new Error('密码参数缺失');\n    }\n    return opts.request<RegisterResponse>('register', {\n      url: `/api/v1/services/${opts.serviceId}/users/register`,\n      method: 'post',\n      headers: opts.headers,\n      data: {\n        account,\n        password,\n        provider: 'username',\n      },\n    });\n  };\n});\n\nexport default register;\n","import { createMethod } from './_';\nimport { CurrentResponse } from './current';\n\nconst updateOne = createMethod((opts) => {\n  return async (user: Partial<CurrentResponse>) => {\n    return opts.request<CurrentResponse>('updateOne', {\n      url: `/api/v1/services/${opts.serviceId}/users`,\n      method: 'put',\n      headers: opts.headers,\n      data: { user },\n    });\n  };\n});\n\nexport default updateOne;\n","import { createMethod } from './_';\nimport { validateAccount } from 'utils/validator';\n\nexport interface SendSMSOptions {\n  region?: string;\n}\n\nexport interface SendSMSResponse {\n  createdAt: number;\n  account: string;\n  messageId: string;\n  success: boolean;\n}\n\nconst sendSMS = createMethod((opts) => {\n  return async (account: string, opt: SendSMSOptions = {}) => {\n    const provider = 'phone_code';\n    validateAccount(account, provider);\n    return opts.request<SendSMSResponse>('sendSMS', {\n      url: `/api/v1/services/${opts.serviceId}/msg/sms`,\n      method: 'post',\n      data: { account, region: opt.region },\n    });\n  };\n});\n\nexport default sendSMS;\n","import { createMethod } from './_';\n\nexport interface ChangePasswordResponse {\n  success: boolean;\n}\n\nconst changePassword = createMethod((opts) => {\n  return async (newPassword: string, originPassword?: string) => {\n    const provider = 'username';\n\n    await opts.request<ChangePasswordResponse>('changePassword', {\n      url: `/api/v1/services/${opts.serviceId}/users/password/modify`,\n      headers: opts.headers,\n      method: 'put',\n      data: {\n        oldPassword: originPassword,\n        newPassword,\n        provider,\n      },\n    });\n\n    return { success: true };\n  };\n});\n\nexport default changePassword;\n","import { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport isObject from 'utils/isObject';\nimport isContext from './utils/isContext';\nimport isUser from './utils/isUser';\nimport { USER_SESSION_KEY_V2, USER_SESSION_KEY_V3 } from 'consts';\nimport { IContext } from 'functions/_';\nimport catchError from 'utils/catchError';\nimport current from './functions/current';\nimport logout from './functions/logout';\nimport login from './functions/login';\nimport loginByPhone from './functions/loginByPhone';\nimport register from './functions/register';\nimport updateOne from './functions/updateOne';\nimport sendSMS from './functions/sendSMS';\nimport changePassword from './functions/changePassword';\n\nclass User {\n  private readonly serviceId: string;\n  private readonly axios: AxiosInstance;\n  constructor(serviceId: string, axiosInstance: AxiosInstance) {\n    this.serviceId = serviceId;\n    this.axios = axiosInstance;\n\n    if (!this.serviceId || !this.axios) {\n      throw new Error('@byteinspire/user: Missing arguments.');\n    }\n  }\n\n  private request = async (identifier: string, config: AxiosRequestConfig) => {\n    try {\n      config.headers = Object.assign(config.headers || {}, {\n        'x-lang': 'lang_zh',\n      });\n      const response = await this.axios.request(config);\n      return response.data.data;\n    } catch (err) {\n      catchError(err);\n      throw new Error(`${identifier} error: ${err}`);\n    }\n  };\n\n  private bind = <F extends (...args: any[]) => any>(fn: F) => {\n    return (\n      ctx: IContext,\n      ...args: Parameters<ReturnType<F>>\n    ): ReturnType<ReturnType<F>> => {\n      if (isUser(ctx)) return ctx as ReturnType<ReturnType<F>>;\n      const context = isObject(ctx.request) ? ctx.request : ctx;\n      if (!isContext(context)) {\n        throw isContext.ContextError;\n      }\n      const headers: Record<string, string> = {};\n      headers[USER_SESSION_KEY_V2] =\n        context.headers[USER_SESSION_KEY_V2] ||\n        context.headers[USER_SESSION_KEY_V3];\n      return fn({\n        serviceId: this.serviceId,\n        request: this.request,\n        ctx: context,\n        headers,\n      })(...args);\n    };\n  };\n\n  current = this.bind(current);\n  logout = this.bind(logout);\n  login = this.bind(login);\n  loginByPhone = this.bind(loginByPhone);\n  register = this.bind(register);\n  updateOne = this.bind(updateOne);\n  sendSMS = this.bind(sendSMS);\n  changePassword = this.bind(changePassword);\n}\n\nexport function createUserSDK(serviceId: string, axiosInstance: AxiosInstance) {\n  return new User(serviceId, axiosInstance);\n}\n\nexport default User;\n"],"sourceRoot":""}