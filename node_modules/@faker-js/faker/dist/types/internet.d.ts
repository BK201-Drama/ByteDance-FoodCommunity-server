import type { Faker } from '.';
export declare class Internet {
    private readonly faker;
    constructor(faker: Faker);
    /**
     * avatar
     *
     * @method faker.internet.avatar
     */
    avatar(): string;
    /**
     * email
     *
     * @method faker.internet.email
     * @param firstName
     * @param lastName
     * @param provider
     */
    email(firstName?: string, lastName?: string, provider?: string): string;
    /**
     * exampleEmail
     *
     * @method faker.internet.exampleEmail
     * @param firstName
     * @param lastName
     */
    exampleEmail(firstName?: string, lastName?: string): string;
    /**
     * userName
     *
     * @method faker.internet.userName
     * @param firstName
     * @param lastName
     */
    userName(firstName?: string, lastName?: string): string;
    /**
     * protocol
     *
     * @method faker.internet.protocol
     */
    protocol(): 'http' | 'https';
    /**
     * method
     *
     * @method faker.internet.httpMethod
     */
    httpMethod(): 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';
    /**
     * url
     *
     * @method faker.internet.url
     */
    url(): string;
    /**
     * domainName
     *
     * @method faker.internet.domainName
     */
    domainName(): string;
    /**
     * domainSuffix
     *
     * @method faker.internet.domainSuffix
     */
    domainSuffix(): string;
    /**
     * domainWord
     *
     * @method faker.internet.domainWord
     */
    domainWord(): string;
    /**
     * ip
     *
     * @method faker.internet.ip
     */
    ip(): string;
    /**
     * ipv6
     *
     * @method faker.internet.ipv6
     */
    ipv6(): string;
    /**
     * port
     *
     * @method faker.internet.port
     */
    port(): number;
    /**
     * userAgent
     *
     * @method faker.internet.userAgent
     */
    userAgent(): string;
    /**
     * color
     *
     * @method faker.internet.color
     * @param baseRed255
     * @param baseGreen255
     * @param baseBlue255
     */
    color(baseRed255?: number, baseGreen255?: number, baseBlue255?: number): string;
    /**
     * mac
     *
     * @method faker.internet.mac
     * @param sep
     */
    mac(sep?: string): string;
    /**
     * password
     *
     * @method faker.internet.password
     * @param len
     * @param memorable
     * @param pattern
     * @param prefix
     */
    password(len?: number, memorable?: boolean, pattern?: RegExp, prefix?: string): string;
}
